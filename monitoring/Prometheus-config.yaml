apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
  labels:
    name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s

    scrape_configs:

      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          # 1) Take the discovered address (e.g. 192.168.49.2:10250)
          # 2) Use a regex that captures the IP and strips out the default port
          - source_labels: [__address__]
            regex: '([^:]+)(?::\d+)?'
            replacement: '$1:9100'
            action: replace
            target_label: __address__

      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.monitoring.svc.cluster.local:8080']
      
      - job_name: 'pods'
        kubernetes_sd_configs:
          - role: pod
      
      - job_name: 'services'
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
                
      - job_name: 'kubernetes-pods-annotation'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: "true"

          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.*)

          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(.*)
            replacement: $1:$2
            target_label: __address__



      # 2) Scrape MinIO metrics
      - job_name: 'minio'
        metrics_path: '/minio/metrics/v3'
        static_configs:
          - targets: ['minio-service.default.svc.cluster.local:9000']
